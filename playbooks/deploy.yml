---
- name: Provision EC2 instance
  hosts: localhost
  gather_facts: false
  tags:
    - provision
  tasks:
  - name: Generate ssh-key for AWS
    community.crypto.openssh_keypair:
      path: "~/.ssh/aws"
      mode: 0400
      state: present

  - name: Create Key Pair      # Create key pair for ssh
    amazon.aws.ec2_key:
      name: spiderpool-key
      key_material: "{{ item }}"
    with_file: "~/.ssh/aws.pub"
    no_log: true

  - name: Create Security group
    amazon.aws.ec2_group:
      name: spiderpool-group
      description: 'Security Group with SSH rule'
      state: present
      rules:
        - proto: tcp
          ports:
          - 22
          cidr_ip: 0.0.0.0/0
          rule_desc: allow all on port 22

  - name: Launch EC2 instance
    amazon.aws.ec2_instance:
      name: spiderpool-vm
      key_name: spiderpool-key
      security_group: spiderpool-group
      instance_type: t2.medium
      image_id: ami-04e5276ebb8451442
      state: running
      wait: yes
      wait_timeout: 300
      tags:
        Name: spiderpool-vm
      detailed_monitoring: no
      network:
        assign_public_ip: yes

- name: Get info about EC2 instance
  hosts: localhost
  gather_facts: false
  tags: always
  tasks:
  - name: Get instances facts
    amazon.aws.ec2_instance_info:
      filters:
        "tag:Name": spiderpool-vm
    register: ec2

  - name: Save instance DNS names
    set_fact:
      instances="{{ instances|default([]) + [ item.public_dns_name ] }}"
    loop: "{{ ec2.instances }}"
    no_log: true

  - name: Add instance DNS name to host group
    add_host:
      name: "{{ item.public_dns_name }}"
      groups: ec2hosts
      ansible_ssh_private_key_file: "~/.ssh/aws"
      ansible_ssh_host_key_checking: false
    loop: "{{ ec2.instances }}"
    no_log: true
    changed_when: false

- hosts: ec2hosts
  name: Configure instance
  user: ec2-user
  gather_facts: true
  tags:
    - configure
  tasks:
  - name: Install and configure dependencies as root
    become: true
    block:
    - name: Install tmux, git, make
      dnf:
        name:
          - tmux
          - git
          - make
        state: present

    - name: Install docker
      dnf:
        name: docker
        state: present

    - name: Add ec2-user to docker group
      user:
        name: ec2-user
        groups: docker

    - name: Start docker
      service:
        name: docker.socket
        state: started

    - name: Add kubernets yum repos
      yum_repository:
        name: kubernets
        description: Kubernetes repo
        baseurl: https://pkgs.k8s.io/core:/stable:/v1.30/rpm/
        enabled: true
        gpgkey: https://pkgs.k8s.io/core:/stable:/v1.30/rpm/repodata/repomd.xml.key
        gpgcheck: true

    - name: Install kubectl
      dnf:
        name: kubectl

    - name: Install golang
      dnf:
        name: golang

- name: Print info about instance
  hosts: localhost
  gather_facts: false
  tags: always
  tasks:
    - name: Instance DNS names
      debug:
        var: instances
