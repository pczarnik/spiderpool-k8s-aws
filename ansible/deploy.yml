---
- name: Configure bastion and cluster
  hosts: bastion,cluster
  remote_user: ec2-user
  become: true
  gather_facts: false
  tags:
    - bastion
    - cluster
  tasks:
    - name: Set hostname
      ansible.builtin.hostname:
        name: "{{ inventory_hostname }}"

    - name: Ensure .ssh directory exists
      ansible.builtin.file:
        dest: /home/ec2-user/.ssh
        mode: "0700"
        owner: ec2-user
        state: directory

    - name: Install ssh key
      ansible.builtin.copy:
        src: "../id_ed25519"
        dest: "/home/ec2-user/.ssh/id_ed25519"
        mode: "0400"
        owner: ec2-user

    - name: Add cluster IPs to /etc/hosts
      ansible.builtin.lineinfile:
        dest: /etc/hosts
        regexp: '.*{{ item }}$'
        line: "{{ hostvars[item].ansible_host }} {{ item }}"
        state: present
      when: hostvars[item].ansible_host is defined
      with_items: "{{ groups.cluster }}"

    - name: Install vim, tmux, git
      ansible.builtin.dnf:
        name:
          - vim
          - tmux
          - git
        state: present

- name: Configure cluster
  hosts: cluster
  remote_user: ec2-user
  become: true
  gather_facts: false
  tags:
    - cluster
  tasks:
    - name: Disable SELinux
      ansible.posix.selinux:
        state: disabled
      register: disable_selinux

    - name: Reboot after disabling SELinux
      ansible.builtin.reboot:
        reboot_timeout: 120
      when: disable_selinux.changed is true

    - name: Add Kubernetes yum repo
      ansible.builtin.yum_repository:
        name: kubernetes
        description: Kubernetes repo
        baseurl: https://pkgs.k8s.io/core:/stable:/v1.30/rpm/
        enabled: true
        gpgkey: https://pkgs.k8s.io/core:/stable:/v1.30/rpm/repodata/repomd.xml.key
        gpgcheck: true

    - name: Install kubelet, kubeadm, kubectl, iproute-tc
      ansible.builtin.dnf:
        name:
          - kubelet
          - kubeadm
          - kubectl
          - iproute-tc

- name: Configure master
  hosts: master
  remote_user: ec2-user
  become: true
  gather_facts: false
  tags:
    - master
  tasks:
    - name: Check if helm is installed
      ansible.builtin.command: which helm
      register: which_helm
      ignore_errors: true
      failed_when: false
      changed_when: false

    - name: Download and install helm
      when: which_helm.rc != 0
      block:
        - name: Download helm installation script
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
            dest: /root/get-helm-3.sh
            mode: "0700"

        - name: Install helm
          ansible.builtin.command: /root/get-helm-3.sh
          changed_when: true

    - name: Add spiderpool repo with helm
      kubernetes.core.helm_repository:
        name: spiderpool
        repo_url: https://spidernet-io.github.io/spiderpool

    - name: Enable kubelet service
      ansible.builtin.service:
        name: kubelet
        state: started
        enabled: true

    - name: Initialize kubernetes controller
      ansible.builtin.command: kubeadm init
      changed_when: true

    - name: Ensure .kube directory exists
      ansible.builtin.file:
        dest: "{{ item.homedir }}/.kube"
        state: directory
        owner: "{{ item.user }}"
        group: "{{ item.user }}"
        mode: "0700"
      loop:
        - user: root
          homedir: /root
        - user: ec2-user
          homedir: /home/ec2-user

    - name: Copy kubectl config to .kube directory
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        remote_src: true
        dest: "{{ item.homedir }}/.kube/config"
        owner: "{{ item.user }}"
        group: "{{ item.user }}"
        mode: "0644"
      loop:
        - user: root
          homedir: /root
        - user: ec2-user
          homedir: /home/ec2-user

    # - name: Install spiderpool with helm
    #   kubernetes.core.helm:
    #     name: spiderpool
    #     chart_ref: spiderpool/spiderpool
    #     namespace: kube-system
    #     set_values:
    #       - value: ipam.enableStatefulSet=false
    #       - value: multus.multusCNI.defaultCniCRName="ipvlan-ens5"
#         - name: Install docker
#           ansible.builtin.dnf:
#             name: docker
#             state: present

#         - name: Add ec2-user to docker group
#           user:
#             name: ec2-user
#             groups: docker

#         - name: Start docker
#           service:
#             name: docker.socket
#             state: started

#         - name: Add kubernets yum repos
#           yum_repository:
#             name: kubernets
#             description: Kubernetes repo
#             baseurl: https://pkgs.k8s.io/core:/stable:/v1.30/rpm/
#             enabled: true
#             gpgkey: https://pkgs.k8s.io/core:/stable:/v1.30/rpm/repodata/repomd.xml.key
#             gpgcheck: true

#         - name: Install kubectl
#           ansible.builtin.dnf:
#             name: kubectl

#         - name: Install golang
#           ansible.builtin.dnf:
#             name: golang
